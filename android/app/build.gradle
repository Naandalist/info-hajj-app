project.ext.envConfigFiles = [
  debug  : ".env",   
  release: ".env"    
]

apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

apply from:
  project(":react-native-config").projectDir.getPath() + "/dotenv.gradle"

def keystorePropertiesFile = file("keystore.properties")
def keystoreProperties    = new Properties()
if (keystorePropertiesFile.exists()) {
  keystoreProperties.load(
    new FileInputStream(keystorePropertiesFile)
  )
} else {
  println "WARNING: keystore.properties not found at " +
    "${keystorePropertiesFile.absolutePath}"
  println "Release signing will use default debug config."
}

react {
  autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = true

def jscFlavor =
  "io.github.react-native-community:jsc-android:2026004.+"

android {
  ndkVersion        rootProject.ext.ndkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  compileSdk        rootProject.ext.compileSdkVersion
  namespace         "com.naandalist.info_haji"

  defaultConfig {
    applicationId    "com.naandalist.info_haji"
    minSdkVersion    rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode      1
    versionName      "1.0"
    resValue "string", "build_config_package",
      applicationId
  }

  signingConfigs {
    debug {
      storeFile     file("debug.keystore")
      storePassword "android"
      keyAlias      "androiddebugkey"
      keyPassword   "android"
    }
    release {
      if (keystoreProperties.containsKey("storeFile")) {
        storeFile     file(keystoreProperties["storeFile"])
        storePassword keystoreProperties["storePassword"]
        keyAlias      keystoreProperties["keyAlias"]
        keyPassword   keystoreProperties["keyPassword"]
      } else {
        println "WARNING: missing keystore props, release may fail."
      }
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }
    release {
      signingConfig  signingConfigs.release
      minifyEnabled  enableProguardInReleaseBuilds
      proguardFiles  getDefaultProguardFile("proguard-android.txt"),
        "proguard-rules.pro"
    }
  }
}

dependencies {
  implementation("com.facebook.react:react-android")
  implementation project(":react-native-config")

  if (hermesEnabled.toBoolean()) {
    implementation("com.facebook.react:hermes-android")
  } else {
    implementation jscFlavor
  }
}

apply from:
  file("../../node_modules/react-native-vector-icons/fonts.gradle")
